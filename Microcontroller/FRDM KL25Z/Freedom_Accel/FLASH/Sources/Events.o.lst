   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Events.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Cpu_OnNMIINT,"ax",%progbits
  18              		.align	2
  19              		.global	Cpu_OnNMIINT
  20              		.code	16
  21              		.thumb_func
  23              	Cpu_OnNMIINT:
  24              	.LFB0:
  25              		.file 1 "../Sources/Events.c"
   1:../Sources/Events.c **** /** ###################################################################
   2:../Sources/Events.c **** **     Filename    : Events.c
   3:../Sources/Events.c **** **     Project     : ProcessorExpert
   4:../Sources/Events.c **** **     Processor   : MKL25Z128VLK4
   5:../Sources/Events.c **** **     Component   : Events
   6:../Sources/Events.c **** **     Version     : Driver 01.00
   7:../Sources/Events.c **** **     Compiler    : GNU C Compiler
   8:../Sources/Events.c **** **     Date/Time   : 2012-08-23, 07:09, # CodeGen: 0
   9:../Sources/Events.c **** **     Abstract    :
  10:../Sources/Events.c **** **         This is user's event module.
  11:../Sources/Events.c **** **         Put your event handler code here.
  12:../Sources/Events.c **** **     Settings    :
  13:../Sources/Events.c **** **     Contents    :
  14:../Sources/Events.c **** **         Cpu_OnNMIINT - void Cpu_OnNMIINT(void);
  15:../Sources/Events.c **** **
  16:../Sources/Events.c **** ** ###################################################################*/
  17:../Sources/Events.c **** /* MODULE Events */
  18:../Sources/Events.c **** 
  19:../Sources/Events.c **** #include "Cpu.h"
  20:../Sources/Events.c **** #include "Events.h"
  21:../Sources/Events.c **** 
  22:../Sources/Events.c **** /* User includes (#include below this line is not maintained by Processor Expert) */
  23:../Sources/Events.c **** #include "MMA8451.h"
  24:../Sources/Events.c **** 
  25:../Sources/Events.c **** /*
  26:../Sources/Events.c **** ** ===================================================================
  27:../Sources/Events.c **** **     Event       :  Cpu_OnNMIINT (module Events)
  28:../Sources/Events.c **** **
  29:../Sources/Events.c **** **     Component   :  Cpu [MKL25Z128LK4]
  30:../Sources/Events.c **** **     Description :
  31:../Sources/Events.c **** **         This event is called when the Non maskable interrupt had
  32:../Sources/Events.c **** **         occurred. This event is automatically enabled when the <NMI
  33:../Sources/Events.c **** **         interrrupt> property is set to 'Enabled'.
  34:../Sources/Events.c **** **     Parameters  : None
  35:../Sources/Events.c **** **     Returns     : Nothing
  36:../Sources/Events.c **** ** ===================================================================
  37:../Sources/Events.c **** */
  38:../Sources/Events.c **** void Cpu_OnNMIINT(void)
  39:../Sources/Events.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              	.LCFI1:
  35              		.cfi_def_cfa_register 7
  40:../Sources/Events.c ****   /* Write your code here ... */
  41:../Sources/Events.c **** }
  36              		.loc 1 41 0
  37 0004 BD46     		mov	sp, r7
  38              		@ sp needed for prologue
  39 0006 80BD     		pop	{r7, pc}
  40              		.cfi_endproc
  41              	.LFE0:
  43              		.section	.text.I2C2_OnMasterBlockSent,"ax",%progbits
  44              		.align	2
  45              		.global	I2C2_OnMasterBlockSent
  46              		.code	16
  47              		.thumb_func
  49              	I2C2_OnMasterBlockSent:
  50              	.LFB1:
  42:../Sources/Events.c **** 
  43:../Sources/Events.c **** /*
  44:../Sources/Events.c **** ** ===================================================================
  45:../Sources/Events.c **** **     Event       :  I2C2_OnMasterBlockSent (module Events)
  46:../Sources/Events.c **** **
  47:../Sources/Events.c **** **     Component   :  I2C2 [I2C_LDD]
  48:../Sources/Events.c **** **     Description :
  49:../Sources/Events.c **** **         This event is called when I2C in master mode finishes the
  50:../Sources/Events.c **** **         transmission of the data successfully. This event is not
  51:../Sources/Events.c **** **         available for the SLAVE mode and if MasterSendBlock is
  52:../Sources/Events.c **** **         disabled. 
  53:../Sources/Events.c **** **     Parameters  :
  54:../Sources/Events.c **** **         NAME            - DESCRIPTION
  55:../Sources/Events.c **** **       * UserDataPtr     - Pointer to the user or
  56:../Sources/Events.c **** **                           RTOS specific data. This pointer is passed
  57:../Sources/Events.c **** **                           as the parameter of Init method.
  58:../Sources/Events.c **** **     Returns     : Nothing
  59:../Sources/Events.c **** ** ===================================================================
  60:../Sources/Events.c **** */
  61:../Sources/Events.c **** void I2C2_OnMasterBlockSent(LDD_TUserData *UserDataPtr)
  62:../Sources/Events.c **** {
  51              		.loc 1 62 0
  52              		.cfi_startproc
  53 0000 80B5     		push	{r7, lr}
  54              	.LCFI2:
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 7, -8
  57              		.cfi_offset 14, -4
  58 0002 84B0     		sub	sp, sp, #16
  59              	.LCFI3:
  60              		.cfi_def_cfa_offset 24
  61 0004 00AF     		add	r7, sp, #0
  62              	.LCFI4:
  63              		.cfi_def_cfa_register 7
  64 0006 7860     		str	r0, [r7, #4]
  63:../Sources/Events.c **** 	  MMA8451_TDataState *ptr = (MMA8451_TDataState*)UserDataPtr;
  65              		.loc 1 63 0
  66 0008 7B68     		ldr	r3, [r7, #4]
  67 000a FB60     		str	r3, [r7, #12]
  64:../Sources/Events.c **** 		
  65:../Sources/Events.c **** 	  ptr->dataTransmittedFlg = TRUE;
  68              		.loc 1 65 0
  69 000c FB68     		ldr	r3, [r7, #12]
  70 000e 0122     		mov	r2, #1
  71 0010 5A70     		strb	r2, [r3, #1]
  66:../Sources/Events.c **** }
  72              		.loc 1 66 0
  73 0012 BD46     		mov	sp, r7
  74 0014 04B0     		add	sp, sp, #16
  75              		@ sp needed for prologue
  76 0016 80BD     		pop	{r7, pc}
  77              		.cfi_endproc
  78              	.LFE1:
  80              		.section	.text.I2C2_OnMasterBlockReceived,"ax",%progbits
  81              		.align	2
  82              		.global	I2C2_OnMasterBlockReceived
  83              		.code	16
  84              		.thumb_func
  86              	I2C2_OnMasterBlockReceived:
  87              	.LFB2:
  67:../Sources/Events.c **** 
  68:../Sources/Events.c **** /*
  69:../Sources/Events.c **** ** ===================================================================
  70:../Sources/Events.c **** **     Event       :  I2C2_OnMasterBlockReceived (module Events)
  71:../Sources/Events.c **** **
  72:../Sources/Events.c **** **     Component   :  I2C2 [I2C_LDD]
  73:../Sources/Events.c **** **     Description :
  74:../Sources/Events.c **** **         This event is called when I2C is in master mode and finishes
  75:../Sources/Events.c **** **         the reception of the data successfully. This event is not
  76:../Sources/Events.c **** **         available for the SLAVE mode and if MasterReceiveBlock is
  77:../Sources/Events.c **** **         disabled.
  78:../Sources/Events.c **** **     Parameters  :
  79:../Sources/Events.c **** **         NAME            - DESCRIPTION
  80:../Sources/Events.c **** **       * UserDataPtr     - Pointer to the user or
  81:../Sources/Events.c **** **                           RTOS specific data. This pointer is passed
  82:../Sources/Events.c **** **                           as the parameter of Init method.
  83:../Sources/Events.c **** **     Returns     : Nothing
  84:../Sources/Events.c **** ** ===================================================================
  85:../Sources/Events.c **** */
  86:../Sources/Events.c **** void I2C2_OnMasterBlockReceived(LDD_TUserData *UserDataPtr)
  87:../Sources/Events.c **** {
  88              		.loc 1 87 0
  89              		.cfi_startproc
  90 0000 80B5     		push	{r7, lr}
  91              	.LCFI5:
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 84B0     		sub	sp, sp, #16
  96              	.LCFI6:
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              	.LCFI7:
 100              		.cfi_def_cfa_register 7
 101 0006 7860     		str	r0, [r7, #4]
  88:../Sources/Events.c **** 	  MMA8451_TDataState *ptr = (MMA8451_TDataState*)UserDataPtr;
 102              		.loc 1 88 0
 103 0008 7B68     		ldr	r3, [r7, #4]
 104 000a FB60     		str	r3, [r7, #12]
  89:../Sources/Events.c **** 			
  90:../Sources/Events.c **** 	  ptr->dataReceivedFlg = TRUE;
 105              		.loc 1 90 0
 106 000c FB68     		ldr	r3, [r7, #12]
 107 000e 0122     		mov	r2, #1
 108 0010 1A70     		strb	r2, [r3]
  91:../Sources/Events.c **** }
 109              		.loc 1 91 0
 110 0012 BD46     		mov	sp, r7
 111 0014 04B0     		add	sp, sp, #16
 112              		@ sp needed for prologue
 113 0016 80BD     		pop	{r7, pc}
 114              		.cfi_endproc
 115              	.LFE2:
 117              		.section	.text.I2C2_OnError,"ax",%progbits
 118              		.align	2
 119              		.global	I2C2_OnError
 120              		.code	16
 121              		.thumb_func
 123              	I2C2_OnError:
 124              	.LFB3:
  92:../Sources/Events.c **** 
  93:../Sources/Events.c **** /*
  94:../Sources/Events.c **** ** ===================================================================
  95:../Sources/Events.c **** **     Event       :  I2C2_OnError (module Events)
  96:../Sources/Events.c **** **
  97:../Sources/Events.c **** **     Component   :  I2C2 [I2C_LDD]
  98:../Sources/Events.c **** **     Description :
  99:../Sources/Events.c **** **         This event is called when an error (e.g. Arbitration lost)
 100:../Sources/Events.c **** **         occurs. The errors can be read with GetError method.
 101:../Sources/Events.c **** **     Parameters  :
 102:../Sources/Events.c **** **         NAME            - DESCRIPTION
 103:../Sources/Events.c **** **       * UserDataPtr     - Pointer to the user or
 104:../Sources/Events.c **** **                           RTOS specific data. This pointer is passed
 105:../Sources/Events.c **** **                           as the parameter of Init method.
 106:../Sources/Events.c **** **     Returns     : Nothing
 107:../Sources/Events.c **** ** ===================================================================
 108:../Sources/Events.c **** */
 109:../Sources/Events.c **** void I2C2_OnError(LDD_TUserData *UserDataPtr)
 110:../Sources/Events.c **** {
 125              		.loc 1 110 0
 126              		.cfi_startproc
 127 0000 80B5     		push	{r7, lr}
 128              	.LCFI8:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 82B0     		sub	sp, sp, #8
 133              	.LCFI9:
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              	.LCFI10:
 137              		.cfi_def_cfa_register 7
 138 0006 7860     		str	r0, [r7, #4]
 111:../Sources/Events.c ****   /* Write your code here ... */
 112:../Sources/Events.c **** }
 139              		.loc 1 112 0
 140 0008 BD46     		mov	sp, r7
 141 000a 02B0     		add	sp, sp, #8
 142              		@ sp needed for prologue
 143 000c 80BD     		pop	{r7, pc}
 144              		.cfi_endproc
 145              	.LFE3:
 147 000e C046     		.text
 148              	.Letext0:
 149              		.file 2 "D:/15. MyFactory/MC - Microcontroller/HSLU/MC_Uebungen/Freedom_Accel/Generated_Code/PE_LD
 150              		.file 3 "../Sources/MMA8451.h"
 151              		.file 4 "D:/15. MyFactory/MC - Microcontroller/HSLU/MC_Uebungen/Freedom_Accel/Generated_Code/PE_Ty
DEFINED SYMBOLS
                            *ABS*:00000000 Events.c
C:\Users\burak\AppData\Local\Temp\ccgkQtnI.s:18     .text.Cpu_OnNMIINT:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccgkQtnI.s:23     .text.Cpu_OnNMIINT:00000000 Cpu_OnNMIINT
C:\Users\burak\AppData\Local\Temp\ccgkQtnI.s:44     .text.I2C2_OnMasterBlockSent:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccgkQtnI.s:49     .text.I2C2_OnMasterBlockSent:00000000 I2C2_OnMasterBlockSent
C:\Users\burak\AppData\Local\Temp\ccgkQtnI.s:81     .text.I2C2_OnMasterBlockReceived:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccgkQtnI.s:86     .text.I2C2_OnMasterBlockReceived:00000000 I2C2_OnMasterBlockReceived
C:\Users\burak\AppData\Local\Temp\ccgkQtnI.s:118    .text.I2C2_OnError:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccgkQtnI.s:123    .text.I2C2_OnError:00000000 I2C2_OnError
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
