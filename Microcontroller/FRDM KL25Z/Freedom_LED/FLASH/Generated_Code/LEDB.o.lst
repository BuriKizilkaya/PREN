   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LEDB.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LEDB_Init,"ax",%progbits
  18              		.align	2
  19              		.global	LEDB_Init
  20              		.code	16
  21              		.thumb_func
  23              	LEDB_Init:
  24              	.LFB0:
  25              		.file 1 "../Generated_Code/LEDB.c"
   1:../Generated_Code/LEDB.c **** /* ###################################################################
   2:../Generated_Code/LEDB.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/LEDB.c **** **     Filename    : LEDB.c
   4:../Generated_Code/LEDB.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/LEDB.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/LEDB.c **** **     Component   : LED
   7:../Generated_Code/LEDB.c **** **     Version     : Component 01.074, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/LEDB.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/LEDB.c **** **     Date/Time   : 2017-11-24, 20:36, # CodeGen: 0
  10:../Generated_Code/LEDB.c **** **     Abstract    :
  11:../Generated_Code/LEDB.c **** **          This component implements a universal driver for a single LED.
  12:../Generated_Code/LEDB.c **** **     Settings    :
  13:../Generated_Code/LEDB.c **** **          Component name                                 : LEDB
  14:../Generated_Code/LEDB.c **** **          Turned On with initialization                  : no
  15:../Generated_Code/LEDB.c **** **          HW Interface                                   : 
  16:../Generated_Code/LEDB.c **** **            On/Off                                       : Enabled
  17:../Generated_Code/LEDB.c **** **              Pin                                        : LEDpin
  18:../Generated_Code/LEDB.c **** **            PWM                                          : Disabled
  19:../Generated_Code/LEDB.c **** **            High Value means ON                          : no
  20:../Generated_Code/LEDB.c **** **          Shell                                          : Disabled
  21:../Generated_Code/LEDB.c **** **     Contents    :
  22:../Generated_Code/LEDB.c **** **         On         - void LEDB_On(void);
  23:../Generated_Code/LEDB.c **** **         Off        - void LEDB_Off(void);
  24:../Generated_Code/LEDB.c **** **         Neg        - void LEDB_Neg(void);
  25:../Generated_Code/LEDB.c **** **         Get        - uint8_t LEDB_Get(void);
  26:../Generated_Code/LEDB.c **** **         Put        - void LEDB_Put(uint8_t val);
  27:../Generated_Code/LEDB.c **** **         SetRatio16 - void LEDB_SetRatio16(uint16_t ratio);
  28:../Generated_Code/LEDB.c **** **         Deinit     - void LEDB_Deinit(void);
  29:../Generated_Code/LEDB.c **** **         Init       - void LEDB_Init(void);
  30:../Generated_Code/LEDB.c **** **
  31:../Generated_Code/LEDB.c **** **     * Copyright (c) 2013-2017, Erich Styger
  32:../Generated_Code/LEDB.c **** **      * Web:         https://mcuoneclipse.com
  33:../Generated_Code/LEDB.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  34:../Generated_Code/LEDB.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  35:../Generated_Code/LEDB.c **** **      * All rights reserved.
  36:../Generated_Code/LEDB.c **** **      *
  37:../Generated_Code/LEDB.c **** **      * Redistribution and use in source and binary forms, with or without modification,
  38:../Generated_Code/LEDB.c **** **      * are permitted provided that the following conditions are met:
  39:../Generated_Code/LEDB.c **** **      *
  40:../Generated_Code/LEDB.c **** **      * - Redistributions of source code must retain the above copyright notice, this list
  41:../Generated_Code/LEDB.c **** **      *   of conditions and the following disclaimer.
  42:../Generated_Code/LEDB.c **** **      *
  43:../Generated_Code/LEDB.c **** **      * - Redistributions in binary form must reproduce the above copyright notice, this
  44:../Generated_Code/LEDB.c **** **      *   list of conditions and the following disclaimer in the documentation and/or
  45:../Generated_Code/LEDB.c **** **      *   other materials provided with the distribution.
  46:../Generated_Code/LEDB.c **** **      *
  47:../Generated_Code/LEDB.c **** **      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  48:../Generated_Code/LEDB.c **** **      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  49:../Generated_Code/LEDB.c **** **      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  50:../Generated_Code/LEDB.c **** **      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  51:../Generated_Code/LEDB.c **** **      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  52:../Generated_Code/LEDB.c **** **      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  53:../Generated_Code/LEDB.c **** **      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  54:../Generated_Code/LEDB.c **** **      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  55:../Generated_Code/LEDB.c **** **      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  56:../Generated_Code/LEDB.c **** **      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  57:../Generated_Code/LEDB.c **** ** ###################################################################*/
  58:../Generated_Code/LEDB.c **** /*!
  59:../Generated_Code/LEDB.c **** ** @file LEDB.c
  60:../Generated_Code/LEDB.c **** ** @version 01.00
  61:../Generated_Code/LEDB.c **** ** @brief
  62:../Generated_Code/LEDB.c **** **          This component implements a universal driver for a single LED.
  63:../Generated_Code/LEDB.c **** */         
  64:../Generated_Code/LEDB.c **** /*!
  65:../Generated_Code/LEDB.c **** **  @addtogroup LEDB_module LEDB module documentation
  66:../Generated_Code/LEDB.c **** **  @{
  67:../Generated_Code/LEDB.c **** */         
  68:../Generated_Code/LEDB.c **** 
  69:../Generated_Code/LEDB.c **** /* MODULE LEDB. */
  70:../Generated_Code/LEDB.c **** 
  71:../Generated_Code/LEDB.c **** #include "LEDB.h"
  72:../Generated_Code/LEDB.c **** 
  73:../Generated_Code/LEDB.c **** /*
  74:../Generated_Code/LEDB.c **** ** ===================================================================
  75:../Generated_Code/LEDB.c **** **     Method      :  LEDB_On (component LED)
  76:../Generated_Code/LEDB.c **** **     Description :
  77:../Generated_Code/LEDB.c **** **         This turns the LED on.
  78:../Generated_Code/LEDB.c **** **     Parameters  : None
  79:../Generated_Code/LEDB.c **** **     Returns     : Nothing
  80:../Generated_Code/LEDB.c **** ** ===================================================================
  81:../Generated_Code/LEDB.c **** */
  82:../Generated_Code/LEDB.c **** /*
  83:../Generated_Code/LEDB.c **** void LEDB_On(void)
  84:../Generated_Code/LEDB.c **** {
  85:../Generated_Code/LEDB.c ****   *** This method is implemented as macro in the header file
  86:../Generated_Code/LEDB.c **** }
  87:../Generated_Code/LEDB.c **** */
  88:../Generated_Code/LEDB.c **** 
  89:../Generated_Code/LEDB.c **** /*
  90:../Generated_Code/LEDB.c **** ** ===================================================================
  91:../Generated_Code/LEDB.c **** **     Method      :  LEDB_Off (component LED)
  92:../Generated_Code/LEDB.c **** **     Description :
  93:../Generated_Code/LEDB.c **** **         This turns the LED off.
  94:../Generated_Code/LEDB.c **** **     Parameters  : None
  95:../Generated_Code/LEDB.c **** **     Returns     : Nothing
  96:../Generated_Code/LEDB.c **** ** ===================================================================
  97:../Generated_Code/LEDB.c **** */
  98:../Generated_Code/LEDB.c **** /*
  99:../Generated_Code/LEDB.c **** void LEDB_Off(void)
 100:../Generated_Code/LEDB.c **** {
 101:../Generated_Code/LEDB.c ****   *** This method is implemented as macro in the header file
 102:../Generated_Code/LEDB.c **** }
 103:../Generated_Code/LEDB.c **** */
 104:../Generated_Code/LEDB.c **** 
 105:../Generated_Code/LEDB.c **** /*
 106:../Generated_Code/LEDB.c **** ** ===================================================================
 107:../Generated_Code/LEDB.c **** **     Method      :  LEDB_Neg (component LED)
 108:../Generated_Code/LEDB.c **** **     Description :
 109:../Generated_Code/LEDB.c **** **         This negates/toggles the LED
 110:../Generated_Code/LEDB.c **** **     Parameters  : None
 111:../Generated_Code/LEDB.c **** **     Returns     : Nothing
 112:../Generated_Code/LEDB.c **** ** ===================================================================
 113:../Generated_Code/LEDB.c **** */
 114:../Generated_Code/LEDB.c **** /*
 115:../Generated_Code/LEDB.c **** void LEDB_Neg(void)
 116:../Generated_Code/LEDB.c **** {
 117:../Generated_Code/LEDB.c ****   *** This method is implemented as macro in the header file
 118:../Generated_Code/LEDB.c **** }
 119:../Generated_Code/LEDB.c **** */
 120:../Generated_Code/LEDB.c **** 
 121:../Generated_Code/LEDB.c **** /*
 122:../Generated_Code/LEDB.c **** ** ===================================================================
 123:../Generated_Code/LEDB.c **** **     Method      :  LEDB_Get (component LED)
 124:../Generated_Code/LEDB.c **** **     Description :
 125:../Generated_Code/LEDB.c **** **         This returns logical 1 in case the LED is on, 0 otherwise.
 126:../Generated_Code/LEDB.c **** **     Parameters  : None
 127:../Generated_Code/LEDB.c **** **     Returns     :
 128:../Generated_Code/LEDB.c **** **         ---             - Status of the LED (on or off)
 129:../Generated_Code/LEDB.c **** ** ===================================================================
 130:../Generated_Code/LEDB.c **** */
 131:../Generated_Code/LEDB.c **** /*
 132:../Generated_Code/LEDB.c **** uint8_t LEDB_Get(void)
 133:../Generated_Code/LEDB.c **** {
 134:../Generated_Code/LEDB.c ****   *** This method is implemented as macro in the header file
 135:../Generated_Code/LEDB.c **** }
 136:../Generated_Code/LEDB.c **** */
 137:../Generated_Code/LEDB.c **** 
 138:../Generated_Code/LEDB.c **** /*
 139:../Generated_Code/LEDB.c **** ** ===================================================================
 140:../Generated_Code/LEDB.c **** **     Method      :  LEDB_Put (component LED)
 141:../Generated_Code/LEDB.c **** **     Description :
 142:../Generated_Code/LEDB.c **** **         Turns the LED on or off.
 143:../Generated_Code/LEDB.c **** **     Parameters  :
 144:../Generated_Code/LEDB.c **** **         NAME            - DESCRIPTION
 145:../Generated_Code/LEDB.c **** **         val             - value to define if the LED has to be on or
 146:../Generated_Code/LEDB.c **** **                           off.
 147:../Generated_Code/LEDB.c **** **     Returns     : Nothing
 148:../Generated_Code/LEDB.c **** ** ===================================================================
 149:../Generated_Code/LEDB.c **** */
 150:../Generated_Code/LEDB.c **** /*
 151:../Generated_Code/LEDB.c **** void LEDB_Put(uint8_t val)
 152:../Generated_Code/LEDB.c **** {
 153:../Generated_Code/LEDB.c ****   *** This method is implemented as macro in the header file
 154:../Generated_Code/LEDB.c **** }
 155:../Generated_Code/LEDB.c **** */
 156:../Generated_Code/LEDB.c **** 
 157:../Generated_Code/LEDB.c **** /*
 158:../Generated_Code/LEDB.c **** ** ===================================================================
 159:../Generated_Code/LEDB.c **** **     Method      :  LEDB_Init (component LED)
 160:../Generated_Code/LEDB.c **** **     Description :
 161:../Generated_Code/LEDB.c **** **         Performs the LED driver initialization.
 162:../Generated_Code/LEDB.c **** **     Parameters  : None
 163:../Generated_Code/LEDB.c **** **     Returns     : Nothing
 164:../Generated_Code/LEDB.c **** ** ===================================================================
 165:../Generated_Code/LEDB.c **** */
 166:../Generated_Code/LEDB.c **** void LEDB_Init(void)
 167:../Generated_Code/LEDB.c **** {
  26              		.loc 1 167 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 3, -8
  32              		.cfi_offset 14, -4
 168:../Generated_Code/LEDB.c **** #if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
 169:../Generated_Code/LEDB.c ****   LEDpin1_Init();
 170:../Generated_Code/LEDB.c **** #endif
 171:../Generated_Code/LEDB.c ****   LEDB_Off();
  33              		.loc 1 171 0
  34 0002 024B     		ldr	r3, .L2
 172:../Generated_Code/LEDB.c **** }
  35              		.loc 1 172 0
  36              		@ sp needed for prologue
 171:../Generated_Code/LEDB.c ****   LEDB_Off();
  37              		.loc 1 171 0
  38 0004 9868     		ldr	r0, [r3, #8]
  39 0006 FFF7FEFF 		bl	BitIoLdd1_SetVal
  40              	.LVL0:
  41              		.loc 1 172 0
  42 000a 08BD     		pop	{r3, pc}
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 000c 00000000 		.word	PE_LDD_DeviceDataList
  47              		.cfi_endproc
  48              	.LFE0:
  50              		.section	.text.LEDB_Deinit,"ax",%progbits
  51              		.align	2
  52              		.global	LEDB_Deinit
  53              		.code	16
  54              		.thumb_func
  56              	LEDB_Deinit:
  57              	.LFB1:
 173:../Generated_Code/LEDB.c **** 
 174:../Generated_Code/LEDB.c **** /*
 175:../Generated_Code/LEDB.c **** ** ===================================================================
 176:../Generated_Code/LEDB.c **** **     Method      :  LEDB_Deinit (component LED)
 177:../Generated_Code/LEDB.c **** **     Description :
 178:../Generated_Code/LEDB.c **** **         Deinitializes the driver
 179:../Generated_Code/LEDB.c **** **     Parameters  : None
 180:../Generated_Code/LEDB.c **** **     Returns     : Nothing
 181:../Generated_Code/LEDB.c **** ** ===================================================================
 182:../Generated_Code/LEDB.c **** */
 183:../Generated_Code/LEDB.c **** void LEDB_Deinit(void)
 184:../Generated_Code/LEDB.c **** {
  58              		.loc 1 184 0
  59              		.cfi_startproc
 185:../Generated_Code/LEDB.c **** #if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
 186:../Generated_Code/LEDB.c ****   LEDpin1_Deinit();
 187:../Generated_Code/LEDB.c **** #endif
 188:../Generated_Code/LEDB.c **** }
  60              		.loc 1 188 0
  61              		@ sp needed for prologue
  62 0000 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE1:
  66 0002 C046     		.section	.text.LEDB_SetRatio16,"ax",%progbits
  67              		.align	2
  68              		.global	LEDB_SetRatio16
  69              		.code	16
  70              		.thumb_func
  72              	LEDB_SetRatio16:
  73              	.LFB2:
 189:../Generated_Code/LEDB.c **** 
 190:../Generated_Code/LEDB.c **** /*
 191:../Generated_Code/LEDB.c **** ** ===================================================================
 192:../Generated_Code/LEDB.c **** **     Method      :  LEDB_SetRatio16 (component LED)
 193:../Generated_Code/LEDB.c **** **     Description :
 194:../Generated_Code/LEDB.c **** **         Method to specify the duty cycle. If using a PWM pin, this
 195:../Generated_Code/LEDB.c **** **         means the duty cycle is set. For On/off pins, values smaller
 196:../Generated_Code/LEDB.c **** **         0x7FFF means off, while values greater means on.
 197:../Generated_Code/LEDB.c **** **     Parameters  :
 198:../Generated_Code/LEDB.c **** **         NAME            - DESCRIPTION
 199:../Generated_Code/LEDB.c **** **         ratio           - Ratio value, where 0 means 'off' and
 200:../Generated_Code/LEDB.c **** **                           0xffff means 'on'
 201:../Generated_Code/LEDB.c **** **     Returns     : Nothing
 202:../Generated_Code/LEDB.c **** ** ===================================================================
 203:../Generated_Code/LEDB.c **** */
 204:../Generated_Code/LEDB.c **** void LEDB_SetRatio16(uint16_t ratio)
 205:../Generated_Code/LEDB.c **** {
  74              		.loc 1 205 0
  75              		.cfi_startproc
  76              	.LVL1:
  77 0000 08B5     		push	{r3, lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
 206:../Generated_Code/LEDB.c ****   /* on/off LED: binary on or off */
 207:../Generated_Code/LEDB.c ****   if (ratio<(0xffff/2)) {
  82              		.loc 1 207 0
  83 0002 064B     		ldr	r3, .L10
  84 0004 9842     		cmp	r0, r3
  85 0006 04D9     		bls	.L9
 208:../Generated_Code/LEDB.c ****     LEDB_Off();
 209:../Generated_Code/LEDB.c ****   } else {
 210:../Generated_Code/LEDB.c ****     LEDB_On();
  86              		.loc 1 210 0
  87 0008 0548     		ldr	r0, .L10+4
  88              	.LVL2:
  89 000a 8068     		ldr	r0, [r0, #8]
  90 000c FFF7FEFF 		bl	BitIoLdd1_ClrVal
  91              	.LVL3:
  92              	.L5:
 211:../Generated_Code/LEDB.c ****   }
 212:../Generated_Code/LEDB.c **** }
  93              		.loc 1 212 0
  94              		@ sp needed for prologue
  95 0010 08BD     		pop	{r3, pc}
  96              	.LVL4:
  97              	.L9:
 208:../Generated_Code/LEDB.c ****     LEDB_Off();
  98              		.loc 1 208 0
  99 0012 0349     		ldr	r1, .L10+4
 100 0014 8868     		ldr	r0, [r1, #8]
 101              	.LVL5:
 102 0016 FFF7FEFF 		bl	BitIoLdd1_SetVal
 103              	.LVL6:
 104 001a F9E7     		b	.L5
 105              	.L11:
 106              		.align	2
 107              	.L10:
 108 001c FE7F0000 		.word	32766
 109 0020 00000000 		.word	PE_LDD_DeviceDataList
 110              		.cfi_endproc
 111              	.LFE2:
 113              		.text
 114              	.Letext0:
 115              		.file 2 "C:/Freescale/CW MCU v10.7/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 116              		.file 3 "../Generated_Code/PE_Types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LEDB.c
C:\Users\burak\AppData\Local\Temp\ccaTmbFt.s:18     .text.LEDB_Init:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccaTmbFt.s:23     .text.LEDB_Init:00000000 LEDB_Init
C:\Users\burak\AppData\Local\Temp\ccaTmbFt.s:46     .text.LEDB_Init:0000000c $d
C:\Users\burak\AppData\Local\Temp\ccaTmbFt.s:51     .text.LEDB_Deinit:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccaTmbFt.s:56     .text.LEDB_Deinit:00000000 LEDB_Deinit
C:\Users\burak\AppData\Local\Temp\ccaTmbFt.s:67     .text.LEDB_SetRatio16:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccaTmbFt.s:72     .text.LEDB_SetRatio16:00000000 LEDB_SetRatio16
C:\Users\burak\AppData\Local\Temp\ccaTmbFt.s:108    .text.LEDB_SetRatio16:0000001c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BitIoLdd1_SetVal
PE_LDD_DeviceDataList
BitIoLdd1_ClrVal
