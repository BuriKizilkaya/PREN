   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"WAIT1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WAIT1_Wait10Cycles,"ax",%progbits
  18              		.align	2
  19              		.global	WAIT1_Wait10Cycles
  20              		.code	16
  21              		.thumb_func
  23              	WAIT1_Wait10Cycles:
  24              	.LFB0:
  25              		.file 1 "../Generated_Code/WAIT1.c"
   1:../Generated_Code/WAIT1.c **** /* ###################################################################
   2:../Generated_Code/WAIT1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/WAIT1.c **** **     Filename    : WAIT1.c
   4:../Generated_Code/WAIT1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/WAIT1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/WAIT1.c **** **     Component   : Wait
   7:../Generated_Code/WAIT1.c **** **     Version     : Component 01.082, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/WAIT1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/WAIT1.c **** **     Date/Time   : 2017-11-24, 20:36, # CodeGen: 0
  10:../Generated_Code/WAIT1.c **** **     Abstract    :
  11:../Generated_Code/WAIT1.c **** **          Implements busy waiting routines.
  12:../Generated_Code/WAIT1.c **** **     Settings    :
  13:../Generated_Code/WAIT1.c **** **          Component name                                 : WAIT1
  14:../Generated_Code/WAIT1.c **** **          Manual Clock Values                            : Disabled
  15:../Generated_Code/WAIT1.c **** **          Delay100usFunction                             : Delay100US
  16:../Generated_Code/WAIT1.c **** **          RTOS                                           : Disabled
  17:../Generated_Code/WAIT1.c **** **          Watchdog                                       : Disabled
  18:../Generated_Code/WAIT1.c **** **     Contents    :
  19:../Generated_Code/WAIT1.c **** **         Wait10Cycles   - void WAIT1_Wait10Cycles(void);
  20:../Generated_Code/WAIT1.c **** **         Wait100Cycles  - void WAIT1_Wait100Cycles(void);
  21:../Generated_Code/WAIT1.c **** **         WaitCycles     - void WAIT1_WaitCycles(uint16_t cycles);
  22:../Generated_Code/WAIT1.c **** **         WaitLongCycles - void WAIT1_WaitLongCycles(uint32_t cycles);
  23:../Generated_Code/WAIT1.c **** **         Waitms         - void WAIT1_Waitms(uint16_t ms);
  24:../Generated_Code/WAIT1.c **** **         Waitus         - void WAIT1_Waitus(uint16_t us);
  25:../Generated_Code/WAIT1.c **** **         Waitns         - void WAIT1_Waitns(uint16_t ns);
  26:../Generated_Code/WAIT1.c **** **         WaitOSms       - void WAIT1_WaitOSms(void);
  27:../Generated_Code/WAIT1.c **** **         Init           - void WAIT1_Init(void);
  28:../Generated_Code/WAIT1.c **** **         DeInit         - void WAIT1_DeInit(void);
  29:../Generated_Code/WAIT1.c **** **
  30:../Generated_Code/WAIT1.c **** **     * Copyright (c) 2013-2017, Erich Styger
  31:../Generated_Code/WAIT1.c **** **      * Web:         https://mcuoneclipse.com
  32:../Generated_Code/WAIT1.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  33:../Generated_Code/WAIT1.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  34:../Generated_Code/WAIT1.c **** **      * All rights reserved.
  35:../Generated_Code/WAIT1.c **** **      *
  36:../Generated_Code/WAIT1.c **** **      * Redistribution and use in source and binary forms, with or without modification,
  37:../Generated_Code/WAIT1.c **** **      * are permitted provided that the following conditions are met:
  38:../Generated_Code/WAIT1.c **** **      *
  39:../Generated_Code/WAIT1.c **** **      * - Redistributions of source code must retain the above copyright notice, this list
  40:../Generated_Code/WAIT1.c **** **      *   of conditions and the following disclaimer.
  41:../Generated_Code/WAIT1.c **** **      *
  42:../Generated_Code/WAIT1.c **** **      * - Redistributions in binary form must reproduce the above copyright notice, this
  43:../Generated_Code/WAIT1.c **** **      *   list of conditions and the following disclaimer in the documentation and/or
  44:../Generated_Code/WAIT1.c **** **      *   other materials provided with the distribution.
  45:../Generated_Code/WAIT1.c **** **      *
  46:../Generated_Code/WAIT1.c **** **      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  47:../Generated_Code/WAIT1.c **** **      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  48:../Generated_Code/WAIT1.c **** **      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  49:../Generated_Code/WAIT1.c **** **      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  50:../Generated_Code/WAIT1.c **** **      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  51:../Generated_Code/WAIT1.c **** **      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  52:../Generated_Code/WAIT1.c **** **      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  53:../Generated_Code/WAIT1.c **** **      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  54:../Generated_Code/WAIT1.c **** **      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  55:../Generated_Code/WAIT1.c **** **      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  56:../Generated_Code/WAIT1.c **** ** ###################################################################*/
  57:../Generated_Code/WAIT1.c **** /*!
  58:../Generated_Code/WAIT1.c **** ** @file WAIT1.c
  59:../Generated_Code/WAIT1.c **** ** @version 01.00
  60:../Generated_Code/WAIT1.c **** ** @brief
  61:../Generated_Code/WAIT1.c **** **          Implements busy waiting routines.
  62:../Generated_Code/WAIT1.c **** */         
  63:../Generated_Code/WAIT1.c **** /*!
  64:../Generated_Code/WAIT1.c **** **  @addtogroup WAIT1_module WAIT1 module documentation
  65:../Generated_Code/WAIT1.c **** **  @{
  66:../Generated_Code/WAIT1.c **** */         
  67:../Generated_Code/WAIT1.c **** 
  68:../Generated_Code/WAIT1.c **** /* MODULE WAIT1. */
  69:../Generated_Code/WAIT1.c **** 
  70:../Generated_Code/WAIT1.c **** #include "WAIT1.h"
  71:../Generated_Code/WAIT1.c **** 
  72:../Generated_Code/WAIT1.c **** 
  73:../Generated_Code/WAIT1.c **** /*
  74:../Generated_Code/WAIT1.c **** ** ===================================================================
  75:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Wait10Cycles (component Wait)
  76:../Generated_Code/WAIT1.c **** **     Description :
  77:../Generated_Code/WAIT1.c **** **         Wait for 10 CPU cycles.
  78:../Generated_Code/WAIT1.c **** **     Parameters  : None
  79:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
  80:../Generated_Code/WAIT1.c **** ** ===================================================================
  81:../Generated_Code/WAIT1.c **** */
  82:../Generated_Code/WAIT1.c **** __attribute__((naked, no_instrument_function)) void WAIT1_Wait10Cycles(void)
  83:../Generated_Code/WAIT1.c **** {
  26              		.loc 1 83 0
  27              		.cfi_startproc
  84:../Generated_Code/WAIT1.c ****   /* This function will wait 10 CPU cycles (including call overhead). */
  85:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
  86:../Generated_Code/WAIT1.c ****   /* NOTE: Cortex-M0 and M4 have 1 cycle for a NOP */
  87:../Generated_Code/WAIT1.c ****   /* Compiler is GNUC */
  88:../Generated_Code/WAIT1.c ****   __asm (
  28              		.loc 1 88 0
  29              	@ 88 "../Generated_Code/WAIT1.c" 1
  30 0000 C046     		nop   
  31 0002 C046     		nop   
  32 0004 C046     		nop   
  33 0006 7047     		bx lr 
  34              		
  35              	@ 0 "" 2
  89:../Generated_Code/WAIT1.c ****    /* bl Wai10Cycles() to here: [4] */
  90:../Generated_Code/WAIT1.c ****    "nop   \n\t" /* [1] */
  91:../Generated_Code/WAIT1.c ****    "nop   \n\t" /* [1] */
  92:../Generated_Code/WAIT1.c ****    "nop   \n\t" /* [1] */
  93:../Generated_Code/WAIT1.c ****    "bx lr \n\t" /* [3] */
  94:../Generated_Code/WAIT1.c ****   );
  95:../Generated_Code/WAIT1.c ****   /*lint -restore */
  96:../Generated_Code/WAIT1.c **** }
  36              		.loc 1 96 0
  37              		.code	16
  38              		.cfi_endproc
  39              	.LFE0:
  41              		.section	.text.WAIT1_Wait100Cycles,"ax",%progbits
  42              		.align	2
  43              		.global	WAIT1_Wait100Cycles
  44              		.code	16
  45              		.thumb_func
  47              	WAIT1_Wait100Cycles:
  48              	.LFB1:
  97:../Generated_Code/WAIT1.c **** 
  98:../Generated_Code/WAIT1.c **** /*
  99:../Generated_Code/WAIT1.c **** ** ===================================================================
 100:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Wait100Cycles (component Wait)
 101:../Generated_Code/WAIT1.c **** **     Description :
 102:../Generated_Code/WAIT1.c **** **         Wait for 100 CPU cycles.
 103:../Generated_Code/WAIT1.c **** **     Parameters  : None
 104:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 105:../Generated_Code/WAIT1.c **** ** ===================================================================
 106:../Generated_Code/WAIT1.c **** */
 107:../Generated_Code/WAIT1.c **** __attribute__((naked, no_instrument_function)) void WAIT1_Wait100Cycles(void)
 108:../Generated_Code/WAIT1.c **** {
  49              		.loc 1 108 0
  50              		.cfi_startproc
 109:../Generated_Code/WAIT1.c ****   /* This function will spend 100 CPU cycles (including call overhead). */
 110:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 111:../Generated_Code/WAIT1.c ****   __asm (
  51              		.loc 1 111 0
  52              	@ 111 "../Generated_Code/WAIT1.c" 1
  53 0000 01B4     		push {r0}   
  54 0002 0020     		movs r0, #0 
  55              		loop:       
  56 0004 C046     		nop         
  57 0006 C046     		nop         
  58 0008 C046     		nop         
  59 000a C046     		nop         
  60 000c 0130     		add r0,#1   
  61 000e 0928     		cmp r0,#9   
  62 0010 F8D9     		bls loop    
  63 0012 C046     		nop         
  64 0014 C046     		nop         
  65 0016 C046     		nop         
  66 0018 C046     		nop         
  67 001a C046     		nop         
  68 001c C046     		nop         
  69 001e C046     		nop         
  70 0020 01BC     		pop {r0}    
  71 0022 7047     		bx lr       
  72              		
  73              	@ 0 "" 2
 112:../Generated_Code/WAIT1.c ****    /* bl to here:               [4] */
 113:../Generated_Code/WAIT1.c ****    "push {r0}   \n\t"        /* [2] */
 114:../Generated_Code/WAIT1.c ****    "movs r0, #0 \n\t"        /* [1] */
 115:../Generated_Code/WAIT1.c ****    "loop:       \n\t"
 116:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 117:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 118:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 119:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 120:../Generated_Code/WAIT1.c ****    "add r0,#1   \n\t"        /* [1] */
 121:../Generated_Code/WAIT1.c ****    "cmp r0,#9   \n\t"        /* [1] */
 122:../Generated_Code/WAIT1.c ****    "bls loop    \n\t"        /* [3] taken, [1] not taken */
 123:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 124:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 125:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 126:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 127:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 128:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 129:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 130:../Generated_Code/WAIT1.c ****    "pop {r0}    \n\t"        /* [2] */
 131:../Generated_Code/WAIT1.c ****    "bx lr       \n\t"        /* [3] */
 132:../Generated_Code/WAIT1.c ****   );
 133:../Generated_Code/WAIT1.c ****   /*lint -restore */
 134:../Generated_Code/WAIT1.c **** }
  74              		.loc 1 134 0
  75              		.code	16
  76              		.cfi_endproc
  77              	.LFE1:
  79              		.global	__aeabi_uidiv
  80              		.section	.text.WAIT1_WaitCycles,"ax",%progbits
  81              		.align	2
  82              		.global	WAIT1_WaitCycles
  83              		.code	16
  84              		.thumb_func
  86              	WAIT1_WaitCycles:
  87              	.LFB2:
 135:../Generated_Code/WAIT1.c **** 
 136:../Generated_Code/WAIT1.c **** /*
 137:../Generated_Code/WAIT1.c **** ** ===================================================================
 138:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitCycles (component Wait)
 139:../Generated_Code/WAIT1.c **** **     Description :
 140:../Generated_Code/WAIT1.c **** **         Wait for a specified number of CPU cycles (16bit data type).
 141:../Generated_Code/WAIT1.c **** **     Parameters  :
 142:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 143:../Generated_Code/WAIT1.c **** **         cycles          - The number of cycles to wait.
 144:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 145:../Generated_Code/WAIT1.c **** ** ===================================================================
 146:../Generated_Code/WAIT1.c **** */
 147:../Generated_Code/WAIT1.c **** void WAIT1_WaitCycles(uint16_t cycles)
 148:../Generated_Code/WAIT1.c **** {
  88              		.loc 1 148 0
  89              		.cfi_startproc
  90              	.LVL0:
  91 0000 38B5     		push	{r3, r4, r5, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 3, -16
  95              		.cfi_offset 4, -12
  96              		.cfi_offset 5, -8
  97              		.cfi_offset 14, -4
  98              		.loc 1 148 0
  99 0002 041E     		sub	r4, r0, #0
 149:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 150:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 151:../Generated_Code/WAIT1.c ****   uint32_t counter = cycles;
 152:../Generated_Code/WAIT1.c **** 
 153:../Generated_Code/WAIT1.c ****   counter += KIN1_GetCycleCounter();
 154:../Generated_Code/WAIT1.c ****   while(KIN1_GetCycleCounter()<counter) {
 155:../Generated_Code/WAIT1.c ****     /* wait */
 156:../Generated_Code/WAIT1.c ****   }
 157:../Generated_Code/WAIT1.c **** #else
 158:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 100              		.loc 1 158 0
 101 0004 642C     		cmp	r4, #100
 102 0006 19D9     		bls	.L4
 103 0008 643C     		sub	r4, r4, #100
 104 000a 601E     		sub	r0, r4, #1
 105              	.LVL1:
 106 000c 6421     		mov	r1, #100
 107 000e 80B2     		uxth	r0, r0
 108 0010 FFF7FEFF 		bl	__aeabi_uidiv
 109              	.LVL2:
 110 0014 0123     		mov	r3, #1
 111 0016 1D1C     		mov	r5, r3
 159:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 160:../Generated_Code/WAIT1.c ****     cycles -= 100;
 112              		.loc 1 160 0
 113 0018 A4B2     		uxth	r4, r4
 114              	.LVL3:
 115 001a 0540     		and	r5, r0
 159:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 116              		.loc 1 159 0
 117 001c FFF7FEFF 		bl	WAIT1_Wait100Cycles
 118              	.LVL4:
 158:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 119              		.loc 1 158 0
 120 0020 642C     		cmp	r4, #100
 121 0022 0BD9     		bls	.L4
 122 0024 002D     		cmp	r5, #0
 123 0026 03D1     		bne	.L27
 124              	.LVL5:
 125              	.L10:
 159:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 126              		.loc 1 159 0
 127 0028 FFF7FEFF 		bl	WAIT1_Wait100Cycles
 128              	.LVL6:
 129              		.loc 1 160 0
 130 002c 643C     		sub	r4, r4, #100
 131 002e A4B2     		uxth	r4, r4
 132              	.L27:
 133 0030 643C     		sub	r4, r4, #100
 134 0032 A4B2     		uxth	r4, r4
 159:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 135              		.loc 1 159 0
 136 0034 FFF7FEFF 		bl	WAIT1_Wait100Cycles
 137              	.LVL7:
 158:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 138              		.loc 1 158 0
 139 0038 642C     		cmp	r4, #100
 140 003a F5D8     		bhi	.L10
 141              	.LVL8:
 142              	.L4:
 161:../Generated_Code/WAIT1.c ****   }
 162:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 143              		.loc 1 162 0
 144 003c 0A2C     		cmp	r4, #10
 145 003e 19D9     		bls	.L3
 146 0040 0A3C     		sub	r4, r4, #10
 147              	.LVL9:
 148 0042 611E     		sub	r1, r4, #1
 149 0044 88B2     		uxth	r0, r1
 150 0046 0A21     		mov	r1, #10
 151 0048 FFF7FEFF 		bl	__aeabi_uidiv
 152              	.LVL10:
 153 004c 0122     		mov	r2, #1
 154 004e 151C     		mov	r5, r2
 163:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 164:../Generated_Code/WAIT1.c ****     cycles -= 10;
 155              		.loc 1 164 0
 156 0050 A4B2     		uxth	r4, r4
 157              	.LVL11:
 158 0052 0540     		and	r5, r0
 163:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 159              		.loc 1 163 0
 160 0054 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 161              	.LVL12:
 162:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 162              		.loc 1 162 0
 163 0058 0A2C     		cmp	r4, #10
 164 005a 0BD9     		bls	.L3
 165 005c 002D     		cmp	r5, #0
 166 005e 03D1     		bne	.L29
 167              	.L9:
 163:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 168              		.loc 1 163 0
 169 0060 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 170              	.LVL13:
 171              		.loc 1 164 0
 172 0064 0A3C     		sub	r4, r4, #10
 173 0066 A4B2     		uxth	r4, r4
 174              	.L29:
 175 0068 0A3C     		sub	r4, r4, #10
 176 006a A4B2     		uxth	r4, r4
 163:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 177              		.loc 1 163 0
 178 006c FFF7FEFF 		bl	WAIT1_Wait10Cycles
 179              	.LVL14:
 162:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 180              		.loc 1 162 0
 181 0070 0A2C     		cmp	r4, #10
 182 0072 F5D8     		bhi	.L9
 183              	.L3:
 165:../Generated_Code/WAIT1.c ****   }
 166:../Generated_Code/WAIT1.c **** #endif
 167:../Generated_Code/WAIT1.c ****   /*lint -restore */
 168:../Generated_Code/WAIT1.c **** }
 184              		.loc 1 168 0
 185              		@ sp needed for prologue
 186 0074 38BD     		pop	{r3, r4, r5, pc}
 187              		.cfi_endproc
 188              	.LFE2:
 190 0076 C046     		.section	.text.WAIT1_WaitLongCycles,"ax",%progbits
 191              		.align	2
 192              		.global	WAIT1_WaitLongCycles
 193              		.code	16
 194              		.thumb_func
 196              	WAIT1_WaitLongCycles:
 197              	.LFB3:
 169:../Generated_Code/WAIT1.c **** 
 170:../Generated_Code/WAIT1.c **** /*
 171:../Generated_Code/WAIT1.c **** ** ===================================================================
 172:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitLongCycles (component Wait)
 173:../Generated_Code/WAIT1.c **** **     Description :
 174:../Generated_Code/WAIT1.c **** **         Wait for a specified number of CPU cycles (32bit data type).
 175:../Generated_Code/WAIT1.c **** **     Parameters  :
 176:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 177:../Generated_Code/WAIT1.c **** **         cycles          - The number of cycles to wait.
 178:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 179:../Generated_Code/WAIT1.c **** ** ===================================================================
 180:../Generated_Code/WAIT1.c **** */
 181:../Generated_Code/WAIT1.c **** void WAIT1_WaitLongCycles(uint32_t cycles)
 182:../Generated_Code/WAIT1.c **** {
 198              		.loc 1 182 0
 199              		.cfi_startproc
 200              	.LVL15:
 201 0000 70B5     		push	{r4, r5, r6, lr}
 202              	.LCFI1:
 203              		.cfi_def_cfa_offset 16
 204              		.cfi_offset 4, -16
 205              		.cfi_offset 5, -12
 206              		.cfi_offset 6, -8
 207              		.cfi_offset 14, -4
 183:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 184:../Generated_Code/WAIT1.c ****   uint32_t counter = cycles;
 185:../Generated_Code/WAIT1.c **** 
 186:../Generated_Code/WAIT1.c ****   counter += KIN1_GetCycleCounter();
 187:../Generated_Code/WAIT1.c ****   while(KIN1_GetCycleCounter()<counter) {
 188:../Generated_Code/WAIT1.c ****     /* wait */
 189:../Generated_Code/WAIT1.c ****   }
 190:../Generated_Code/WAIT1.c **** #else
 191:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 192:../Generated_Code/WAIT1.c ****   while(cycles>60000) {
 208              		.loc 1 192 0
 209 0002 334E     		ldr	r6, .L64
 182:../Generated_Code/WAIT1.c **** {
 210              		.loc 1 182 0
 211 0004 051E     		sub	r5, r0, #0
 212              		.loc 1 192 0
 213 0006 B542     		cmp	r5, r6
 214 0008 22D9     		bls	.L33
 215              	.LVL16:
 216              	.L42:
 217              	.LBB6:
 218              	.LBB7:
 159:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 219              		.loc 1 159 0
 220 000a FFF7FEFF 		bl	WAIT1_Wait100Cycles
 221              	.LVL17:
 222 000e 314C     		ldr	r4, .L64+4
 223              	.L34:
 224 0010 013C     		sub	r4, r4, #1
 225 0012 A4B2     		uxth	r4, r4
 226 0014 013C     		sub	r4, r4, #1
 227 0016 A4B2     		uxth	r4, r4
 228 0018 FFF7FEFF 		bl	WAIT1_Wait100Cycles
 229              	.LVL18:
 230 001c FFF7FEFF 		bl	WAIT1_Wait100Cycles
 231              	.LVL19:
 158:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 232              		.loc 1 158 0
 233 0020 002C     		cmp	r4, #0
 234 0022 F5D1     		bne	.L34
 235              	.LVL20:
 163:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 236              		.loc 1 163 0
 237 0024 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 238              	.LVL21:
 239 0028 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 240              	.LVL22:
 241 002c FFF7FEFF 		bl	WAIT1_Wait10Cycles
 242              	.LVL23:
 243 0030 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 244              	.LVL24:
 245 0034 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 246              	.LVL25:
 247 0038 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 248              	.LVL26:
 249 003c FFF7FEFF 		bl	WAIT1_Wait10Cycles
 250              	.LVL27:
 251 0040 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 252              	.LVL28:
 253 0044 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 254              	.LVL29:
 255              	.LBE7:
 256              	.LBE6:
 193:../Generated_Code/WAIT1.c ****     WAIT1_WaitCycles(60000);
 194:../Generated_Code/WAIT1.c ****     cycles -= 60000;
 257              		.loc 1 194 0
 258 0048 234B     		ldr	r3, .L64+8
 259 004a ED18     		add	r5, r5, r3
 260              	.LVL30:
 192:../Generated_Code/WAIT1.c ****   while(cycles>60000) {
 261              		.loc 1 192 0
 262 004c B542     		cmp	r5, r6
 263 004e DCD8     		bhi	.L42
 264              	.L33:
 195:../Generated_Code/WAIT1.c ****   }
 196:../Generated_Code/WAIT1.c ****   WAIT1_WaitCycles((uint16_t)cycles);
 265              		.loc 1 196 0
 266 0050 ADB2     		uxth	r5, r5
 267              	.LVL31:
 268              	.LBB8:
 269              	.LBB9:
 158:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 270              		.loc 1 158 0
 271 0052 642D     		cmp	r5, #100
 272 0054 19D9     		bls	.L35
 273 0056 643D     		sub	r5, r5, #100
 274              	.LVL32:
 275 0058 681E     		sub	r0, r5, #1
 276 005a 6421     		mov	r1, #100
 277 005c 80B2     		uxth	r0, r0
 278 005e FFF7FEFF 		bl	__aeabi_uidiv
 279              	.LVL33:
 280 0062 0121     		mov	r1, #1
 281 0064 0E1C     		mov	r6, r1
 160:../Generated_Code/WAIT1.c ****     cycles -= 100;
 282              		.loc 1 160 0
 283 0066 ADB2     		uxth	r5, r5
 284              	.LVL34:
 285 0068 0640     		and	r6, r0
 159:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 286              		.loc 1 159 0
 287 006a FFF7FEFF 		bl	WAIT1_Wait100Cycles
 288              	.LVL35:
 158:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 289              		.loc 1 158 0
 290 006e 642D     		cmp	r5, #100
 291 0070 0BD9     		bls	.L35
 292 0072 002E     		cmp	r6, #0
 293 0074 03D1     		bne	.L63
 294              	.LVL36:
 295              	.L41:
 159:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 296              		.loc 1 159 0
 297 0076 FFF7FEFF 		bl	WAIT1_Wait100Cycles
 298              	.LVL37:
 160:../Generated_Code/WAIT1.c ****     cycles -= 100;
 299              		.loc 1 160 0
 300 007a 643D     		sub	r5, r5, #100
 301 007c ADB2     		uxth	r5, r5
 302              	.L63:
 303 007e 643D     		sub	r5, r5, #100
 304 0080 ADB2     		uxth	r5, r5
 159:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 305              		.loc 1 159 0
 306 0082 FFF7FEFF 		bl	WAIT1_Wait100Cycles
 307              	.LVL38:
 158:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 308              		.loc 1 158 0
 309 0086 642D     		cmp	r5, #100
 310 0088 F5D8     		bhi	.L41
 311              	.LVL39:
 312              	.L35:
 162:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 313              		.loc 1 162 0
 314 008a 0A2D     		cmp	r5, #10
 315 008c 1FD9     		bls	.L31
 316 008e 0A3D     		sub	r5, r5, #10
 317              	.LVL40:
 318 0090 6A1E     		sub	r2, r5, #1
 319 0092 90B2     		uxth	r0, r2
 320 0094 0A21     		mov	r1, #10
 321 0096 FFF7FEFF 		bl	__aeabi_uidiv
 322              	.LVL41:
 323 009a 0124     		mov	r4, #1
 324 009c 261C     		mov	r6, r4
 164:../Generated_Code/WAIT1.c ****     cycles -= 10;
 325              		.loc 1 164 0
 326 009e ADB2     		uxth	r5, r5
 327              	.LVL42:
 328 00a0 0640     		and	r6, r0
 163:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 329              		.loc 1 163 0
 330 00a2 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 331              	.LVL43:
 162:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 332              		.loc 1 162 0
 333 00a6 0A2D     		cmp	r5, #10
 334 00a8 11D9     		bls	.L31
 335 00aa 002E     		cmp	r6, #0
 336 00ac 05D0     		beq	.L40
 164:../Generated_Code/WAIT1.c ****     cycles -= 10;
 337              		.loc 1 164 0
 338 00ae 0A3D     		sub	r5, r5, #10
 339 00b0 ADB2     		uxth	r5, r5
 163:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 340              		.loc 1 163 0
 341 00b2 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 342              	.LVL44:
 162:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 343              		.loc 1 162 0
 344 00b6 0A2D     		cmp	r5, #10
 345 00b8 09D9     		bls	.L31
 346              	.L40:
 164:../Generated_Code/WAIT1.c ****     cycles -= 10;
 347              		.loc 1 164 0
 348 00ba 0A3D     		sub	r5, r5, #10
 349 00bc ACB2     		uxth	r4, r5
 350 00be 0A3C     		sub	r4, r4, #10
 351 00c0 A5B2     		uxth	r5, r4
 163:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 352              		.loc 1 163 0
 353 00c2 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 354              	.LVL45:
 355 00c6 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 356              	.LVL46:
 162:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 357              		.loc 1 162 0
 358 00ca 0A2D     		cmp	r5, #10
 359 00cc F5D8     		bhi	.L40
 360              	.L31:
 361              	.LBE9:
 362              	.LBE8:
 197:../Generated_Code/WAIT1.c ****   /*lint -restore */
 198:../Generated_Code/WAIT1.c **** #endif
 199:../Generated_Code/WAIT1.c **** }
 363              		.loc 1 199 0
 364              		@ sp needed for prologue
 365 00ce 70BD     		pop	{r4, r5, r6, pc}
 366              	.L65:
 367              		.align	2
 368              	.L64:
 369 00d0 60EA0000 		.word	60000
 370 00d4 56020000 		.word	598
 371 00d8 A015FFFF 		.word	-60000
 372              		.cfi_endproc
 373              	.LFE3:
 375              		.section	.text.WAIT1_Waitms,"ax",%progbits
 376              		.align	2
 377              		.global	WAIT1_Waitms
 378              		.code	16
 379              		.thumb_func
 381              	WAIT1_Waitms:
 382              	.LFB4:
 200:../Generated_Code/WAIT1.c **** 
 201:../Generated_Code/WAIT1.c **** /*
 202:../Generated_Code/WAIT1.c **** ** ===================================================================
 203:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitms (component Wait)
 204:../Generated_Code/WAIT1.c **** **     Description :
 205:../Generated_Code/WAIT1.c **** **         Wait for a specified time in milliseconds.
 206:../Generated_Code/WAIT1.c **** **     Parameters  :
 207:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 208:../Generated_Code/WAIT1.c **** **         ms              - How many milliseconds the function has to
 209:../Generated_Code/WAIT1.c **** **                           wait
 210:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 211:../Generated_Code/WAIT1.c **** ** ===================================================================
 212:../Generated_Code/WAIT1.c **** */
 213:../Generated_Code/WAIT1.c **** void WAIT1_Waitms(uint16_t ms)
 214:../Generated_Code/WAIT1.c **** {
 383              		.loc 1 214 0
 384              		.cfi_startproc
 385              	.LVL47:
 386 0000 38B5     		push	{r3, r4, r5, lr}
 387              	.LCFI2:
 388              		.cfi_def_cfa_offset 16
 389              		.cfi_offset 3, -16
 390              		.cfi_offset 4, -12
 391              		.cfi_offset 5, -8
 392              		.cfi_offset 14, -4
 393              		.loc 1 214 0
 394 0002 051E     		sub	r5, r0, #0
 215:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 216:../Generated_Code/WAIT1.c ****   uint32_t msCycles; /* cycles for 1 ms */
 217:../Generated_Code/WAIT1.c **** 
 218:../Generated_Code/WAIT1.c ****   /* static clock/speed configuration */
 219:../Generated_Code/WAIT1.c ****   msCycles = WAIT1_NofCyclesMs(1, WAIT1_INSTR_CLOCK_HZ);
 220:../Generated_Code/WAIT1.c ****   while(ms>0) {
 395              		.loc 1 220 0
 396 0004 1ED0     		beq	.L66
 397              	.LVL48:
 398              	.L76:
 399              	.LBB16:
 400              	.LBB17:
 401              	.LBB18:
 402              	.LBB19:
 159:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 403              		.loc 1 159 0
 404 0006 FFF7FEFF 		bl	WAIT1_Wait100Cycles
 405              	.LVL49:
 406 000a D024     		mov	r4, #208
 407              	.L68:
 408 000c 013C     		sub	r4, r4, #1
 409 000e A4B2     		uxth	r4, r4
 410 0010 013C     		sub	r4, r4, #1
 411 0012 A4B2     		uxth	r4, r4
 412 0014 FFF7FEFF 		bl	WAIT1_Wait100Cycles
 413              	.LVL50:
 414 0018 FFF7FEFF 		bl	WAIT1_Wait100Cycles
 415              	.LVL51:
 158:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 416              		.loc 1 158 0
 417 001c 002C     		cmp	r4, #0
 418 001e F5D1     		bne	.L68
 419              	.LVL52:
 420              	.LBE19:
 421              	.LBE18:
 422              	.LBE17:
 423              	.LBE16:
 221:../Generated_Code/WAIT1.c ****     WAIT1_WaitLongCycles(msCycles);
 222:../Generated_Code/WAIT1.c ****     ms--;
 424              		.loc 1 222 0
 425 0020 013D     		sub	r5, r5, #1
 426 0022 ADB2     		uxth	r5, r5
 427              	.LBB23:
 428              	.LBB22:
 429              	.LBB21:
 430              	.LBB20:
 163:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 431              		.loc 1 163 0
 432 0024 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 433              	.LVL53:
 434 0028 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 435              	.LVL54:
 436 002c FFF7FEFF 		bl	WAIT1_Wait10Cycles
 437              	.LVL55:
 438 0030 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 439              	.LVL56:
 440 0034 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 441              	.LVL57:
 442 0038 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 443              	.LVL58:
 444 003c FFF7FEFF 		bl	WAIT1_Wait10Cycles
 445              	.LVL59:
 446              	.LBE20:
 447              	.LBE21:
 448              	.LBE22:
 449              	.LBE23:
 220:../Generated_Code/WAIT1.c ****   while(ms>0) {
 450              		.loc 1 220 0
 451 0040 002D     		cmp	r5, #0
 452 0042 E0D1     		bne	.L76
 453              	.LVL60:
 454              	.L66:
 223:../Generated_Code/WAIT1.c ****   }
 224:../Generated_Code/WAIT1.c ****   /*lint -restore */
 225:../Generated_Code/WAIT1.c **** }
 455              		.loc 1 225 0
 456              		@ sp needed for prologue
 457 0044 38BD     		pop	{r3, r4, r5, pc}
 458              		.cfi_endproc
 459              	.LFE4:
 461 0046 C046     		.section	.text.WAIT1_Init,"ax",%progbits
 462              		.align	2
 463              		.global	WAIT1_Init
 464              		.code	16
 465              		.thumb_func
 467              	WAIT1_Init:
 468              	.LFB5:
 226:../Generated_Code/WAIT1.c **** /*
 227:../Generated_Code/WAIT1.c **** ** ===================================================================
 228:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitus (component Wait)
 229:../Generated_Code/WAIT1.c **** **     Description :
 230:../Generated_Code/WAIT1.c **** **         Wait for a specified time in microseconds.
 231:../Generated_Code/WAIT1.c **** **     Parameters  :
 232:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 233:../Generated_Code/WAIT1.c **** **         us              - How many microseconds the function has to
 234:../Generated_Code/WAIT1.c **** **                           wait
 235:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 236:../Generated_Code/WAIT1.c **** ** ===================================================================
 237:../Generated_Code/WAIT1.c **** */
 238:../Generated_Code/WAIT1.c **** /* implemented as macro version. See header file. */
 239:../Generated_Code/WAIT1.c **** /*
 240:../Generated_Code/WAIT1.c **** ** ===================================================================
 241:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitns (component Wait)
 242:../Generated_Code/WAIT1.c **** **     Description :
 243:../Generated_Code/WAIT1.c **** **         Wait for a specified time in nano seconds.
 244:../Generated_Code/WAIT1.c **** **     Parameters  :
 245:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 246:../Generated_Code/WAIT1.c **** **         ns              - How many ns the function has to wait
 247:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 248:../Generated_Code/WAIT1.c **** ** ===================================================================
 249:../Generated_Code/WAIT1.c **** */
 250:../Generated_Code/WAIT1.c **** /* implemented as macro version. See header file. */
 251:../Generated_Code/WAIT1.c **** /*
 252:../Generated_Code/WAIT1.c **** ** ===================================================================
 253:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitOSms (component Wait)
 254:../Generated_Code/WAIT1.c **** **     Description :
 255:../Generated_Code/WAIT1.c **** **         If an RTOS is enabled, this routine will use a non-blocking
 256:../Generated_Code/WAIT1.c **** **         wait method. Otherwise it will do a busy/blocking wait.
 257:../Generated_Code/WAIT1.c **** **     Parameters  : None
 258:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 259:../Generated_Code/WAIT1.c **** ** ===================================================================
 260:../Generated_Code/WAIT1.c **** */
 261:../Generated_Code/WAIT1.c **** /*
 262:../Generated_Code/WAIT1.c **** void WAIT1_WaitOSms(void)
 263:../Generated_Code/WAIT1.c **** {
 264:../Generated_Code/WAIT1.c ****   Method is implemented as macro in the header file
 265:../Generated_Code/WAIT1.c **** }
 266:../Generated_Code/WAIT1.c **** */
 267:../Generated_Code/WAIT1.c **** 
 268:../Generated_Code/WAIT1.c **** /*
 269:../Generated_Code/WAIT1.c **** ** ===================================================================
 270:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Init (component Wait)
 271:../Generated_Code/WAIT1.c **** **     Description :
 272:../Generated_Code/WAIT1.c **** **         Driver initialization routine.
 273:../Generated_Code/WAIT1.c **** **     Parameters  : None
 274:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 275:../Generated_Code/WAIT1.c **** ** ===================================================================
 276:../Generated_Code/WAIT1.c **** */
 277:../Generated_Code/WAIT1.c **** void WAIT1_Init(void)
 278:../Generated_Code/WAIT1.c **** {
 469              		.loc 1 278 0
 470              		.cfi_startproc
 279:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 280:../Generated_Code/WAIT1.c ****   /* init cycle counter */
 281:../Generated_Code/WAIT1.c ****   KIN1_InitCycleCounter();
 282:../Generated_Code/WAIT1.c ****   KIN1_ResetCycleCounter();
 283:../Generated_Code/WAIT1.c ****   KIN1_EnableCycleCounter();
 284:../Generated_Code/WAIT1.c **** #endif
 285:../Generated_Code/WAIT1.c **** }
 471              		.loc 1 285 0
 472              		@ sp needed for prologue
 473 0000 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE5:
 477 0002 C046     		.section	.text.WAIT1_DeInit,"ax",%progbits
 478              		.align	2
 479              		.global	WAIT1_DeInit
 480              		.code	16
 481              		.thumb_func
 483              	WAIT1_DeInit:
 484              	.LFB6:
 286:../Generated_Code/WAIT1.c **** 
 287:../Generated_Code/WAIT1.c **** /*
 288:../Generated_Code/WAIT1.c **** ** ===================================================================
 289:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_DeInit (component Wait)
 290:../Generated_Code/WAIT1.c **** **     Description :
 291:../Generated_Code/WAIT1.c **** **         Driver de-initialization routine
 292:../Generated_Code/WAIT1.c **** **     Parameters  : None
 293:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 294:../Generated_Code/WAIT1.c **** ** ===================================================================
 295:../Generated_Code/WAIT1.c **** */
 296:../Generated_Code/WAIT1.c **** void WAIT1_DeInit(void)
 297:../Generated_Code/WAIT1.c **** {
 485              		.loc 1 297 0
 486              		.cfi_startproc
 298:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 299:../Generated_Code/WAIT1.c ****   /* disable hardware cycle counter */
 300:../Generated_Code/WAIT1.c ****   KIN1_DisableCycleCounter();
 301:../Generated_Code/WAIT1.c **** #endif
 302:../Generated_Code/WAIT1.c **** }
 487              		.loc 1 302 0
 488              		@ sp needed for prologue
 489 0000 7047     		bx	lr
 490              		.cfi_endproc
 491              	.LFE6:
 493 0002 C046     		.text
 494              	.Letext0:
 495              		.file 2 "C:/Freescale/CW MCU v10.7/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
DEFINED SYMBOLS
                            *ABS*:00000000 WAIT1.c
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:18     .text.WAIT1_Wait10Cycles:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:23     .text.WAIT1_Wait10Cycles:00000000 WAIT1_Wait10Cycles
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:42     .text.WAIT1_Wait100Cycles:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:47     .text.WAIT1_Wait100Cycles:00000000 WAIT1_Wait100Cycles
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:55     .text.WAIT1_Wait100Cycles:00000004 loop
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:81     .text.WAIT1_WaitCycles:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:86     .text.WAIT1_WaitCycles:00000000 WAIT1_WaitCycles
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:191    .text.WAIT1_WaitLongCycles:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:196    .text.WAIT1_WaitLongCycles:00000000 WAIT1_WaitLongCycles
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:369    .text.WAIT1_WaitLongCycles:000000d0 $d
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:376    .text.WAIT1_Waitms:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:381    .text.WAIT1_Waitms:00000000 WAIT1_Waitms
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:462    .text.WAIT1_Init:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:467    .text.WAIT1_Init:00000000 WAIT1_Init
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:478    .text.WAIT1_DeInit:00000000 $t
C:\Users\burak\AppData\Local\Temp\ccKgV68s.s:483    .text.WAIT1_DeInit:00000000 WAIT1_DeInit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
